public class LinkedList {
    Node firstNode;
    public void addFirst(Node newNode){
        if(firstNode==null)
          firstNode = newNode;
        else{
          newNode.next = firstNode;
            firstNode = newNode;
        }
    }
    public void addLast(Node newNode){
        if (firstNode == null) {
          firstNode = newNode;
           System.out.println("ilk düðüm oluþturuldu." +
               firstNode.value);
        }
        else {
          Node temp = firstNode;
            while (temp != null) {
                if(temp.next==null){
                  temp.next=newNode;
                    break;
                }
                temp = temp.next;
            }
        }
    }
    public void add(Node eklenecek, Node n){
      eklenecek.next = n.next;
        n.next = eklenecek;
    }
    
    /*LinkedList'ten eleman silme*/
    public void sonDugumuSil(){
      
    //LinkedList'in boþ olma durumu kontrol edilir.
        if(firstNode==null)
            System.out.println("Liste Bos");
        
     //Listede sadece bir eleman varsa onu silmemiz gerekir.
        else if(firstNode.next==null)
          firstNode=null;
        
        //listede birden fazla eleman varsa:
        else{
          
            //Listede en az iki eleman var ve en sondakini silmek istiyoruz
            //o zaman aktif düðümün iki sonrakini kontrol ederiz, eger null ise
            //aktif düðümün bir sonrakini null yaparýz, böylece en son elemanla bir öncekinin
            //baðýný koparmýþ oluruz.
          Node temp = firstNode;
            while(true){
                if(temp.next.next==null){
                  temp.next=null;
                    break;
                }
                temp = temp.next;
            }
        }
    }
    public void ilkDugumuSil(){
        if(firstNode==null)
            System.out.println("Liste Bos");
     //Listede sadece bir eleman varsa onu silmemiz gerekir.
        else {
          firstNode = firstNode.next;
        }
    }
    public void dugumSil(Node silinecek){
      Node temp = firstNode;
      
        //Eger ilk düðüm silinmek isteniyorsa;
        if(temp==silinecek)
          firstNode = firstNode.next;
        //aradaki herhangi bir düðüm silinmek isteniyorsa;
        while(temp!=null){
            if(temp.next!=silinecek)
              temp = temp.next;
            else{
              temp.next = temp.next.next;
            }
        }
    }
    
    public void listeYazdir(){
      Node temp = firstNode;
        while(temp!=null){
            System.out.println(temp.value);
            temp = temp.next;
        }
    }
    public static void main(String[] args) {
        LinkedList b = new LinkedList();
        b.ilkDugumuSil();
        
        Node n1 = new Node(1);
        Node n2 = new Node(2);
        Node n3 = new Node(3);
        Node n4 = new Node(4);
        b.addLast(n1);
        b.listeYazdir();
        
        //Ýlk düðümü silelim
        b.ilkDugumuSil();
        System.out.println("Ýlk düðüm silindi");
        b.addLast(n2);
        b.addLast(n3);
        b.addLast(n4);
        b.listeYazdir();
        
        Node n5 = new Node(7);
        b.addFirst(n5);
        System.out.println("En basa 7 eklendi");
        b.listeYazdir();
        Node n6 = new Node(12);
        //n6`yi n3`ten sonraya eklemek icin
        System.out.println("3 ten sonra 12 eklendi");
        b.add(n6, n3);
        b.listeYazdir();
        b.sonDugumuSil();
        System.out.println("Son dugum silindi");
        b.listeYazdir();
        System.out.println("2. dugumu silelim");
        b.dugumSil(n2);
        b.listeYazdir();
    }
}
public class Node{
    int value;
    Node next;
    public Node(int n, Node no){
      value = n;
        next = no;
    }
    public Node(int n){
      value = n;
        next = null;
    }
}
